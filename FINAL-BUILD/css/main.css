/*FONTS*/
@import url("https://fonts.googleapis.com/css?family=Bebas+Neue|Roboto|Odibee+Sans&display=swap");
/*STYLES*/
body {
  background-image: url("../img/background6.jpg");
  background-size: cover;
  padding: 0;
  margin: 0;
  max-height: 1080px;
  overflow: hidden; }

* {
  cursor: url("../img/cursor.cur"), auto;
  box-sizing: border-box;
  font-family: "Roboto", sans-serif; }

img {
  z-index: -1; }

p,
strong {
  font-size: 15pt;
  font-family: "Roboto", sans-serif;
  line-height: 20pt; }

a {
  cursor: url("../img/click.cur"), auto; }

.link {
  cursor: url("../img/click.cur"), auto; }

h1 {
  font-family: "Odibee Sans", sans-serif;
  font-size: 30pt; }

h3 {
  font-family: "Odibee Sans", sans-serif;
  font-size: 25pt;
  line-height: 5pt; }

/*Top bar things*/
#topBar {
  background-color: white;
  height: 30px;
  font-size: 16pt;
  padding-top: 5px; }

.bar {
  font-family: "Odibee Sans", sans-serif;
  line-height: 25px; }

#netIcon {
  float: right;
  height: 22px;
  padding-right: 10px; }

#time {
  float: right;
  padding-left: 10px;
  padding-right: 10px; }

#date {
  float: right; }

#userStatus {
  top: 0;
  left: 0;
  margin: 0;
  padding: 0;
  height: 30px;
  width: auto;
  padding: 5px 10px;
  line-height: 25px;
  font-size: 16pt;
  color: black;
  background-color: white;
  position: absolute;
  overflow: hidden;
  font-family: "Odibee Sans", sans-serif; }
  #userStatus:hover {
    background-color: lightgray; }
  #userStatus span {
    font-family: "Odibee Sans", sans-serif; }

/*Icon things*/
.iconText {
  padding: 0;
  margin: 0;
  color: white;
  font-size: 16pt;
  font-family: "Odibee Sans", sans-serif;
  font-weight: bold; }

.icon {
  position: absolute;
  z-index: -1;
  bottom: 20px;
  text-align: center; }

.iconImg {
  padding-bottom: 0;
  margin-bottom: 0;
  height: 60px; }

.settingsIcon img {
  filter: invert(100%); }

@keyframes glowing {
  0% {
    box-shadow: 0 0 3px 3px lightblue; }
  50% {
    box-shadow: 0 0 10px 10px lightblue; }
  100% {
    box-shadow: 0 0 3px 3px lightblue; } }

.glowIcon {
  animation: glowing 1500ms infinite; }

/*Window things*/
.banner {
  padding-left: 9px;
  font-size: 15pt; }

.dot {
  height: 12px;
  width: 12px;
  background-color: white;
  border-radius: 50%;
  margin-left: 5px;
  display: inline-block;
  cursor: url("../img/cursor.cur"), auto; }

.windowHeader {
  padding: 8px;
  background: darkgray;
  cursor: url("../img/move.cur"), move;
  overflow: hidden; }

#termWindowBody {
  padding: 10px;
  cursor: url("../img/text.cur"), auto;
  background-color: black;
  font-size: 30pt;
  --color: lightblue;
  --background: black;
  --size: 1.2; }

.content {
  padding: 10px;
  background-color: white;
  color: black;
  font-size: 20pt;
  overflow: auto; }

.window {
  position: absolute;
  display: block;
  border: 6px solid darkgray;
  box-shadow: 6px 6px 15px; }

.banner {
  font-family: "Odibee Sans", sans-serif;
  padding-left: 9px;
  font-size: 15pt; }

.noselect {
  -webkit-touch-callout: none;
  /* iOS Safari */
  -webkit-user-select: none;
  /* Safari */
  -khtml-user-select: none;
  /* Konqueror HTML */
  -moz-user-select: none;
  /* Old versions of Firefox */
  -ms-user-select: none;
  /* Internet Explorer/Edge */
  user-select: none;
  /* Non-prefixed version, currently
                                  supported by Chrome, Opera and Firefox */ }

.focused {
  border: 6px solid lightblue; }

.assistantMessage p {
  line-height: 35px; }

/*Chat things*/
#chatBox {
  position: absolute;
  background-color: white;
  right: 40px;
  bottom: 0;
  width: 330px;
  height: 520px;
  box-shadow: 6px 6px 15px;
  transition: height 0.6s ease-in-out; }

#chatTop {
  background-color: darkgray;
  height: 40px; }

#chatTopText {
  font-size: 23pt;
  line-height: 45px;
  padding-left: 20px;
  font-family: "Odibee Sans", sans-serif; }

#chatBody {
  height: 360px;
  background-color: white;
  overflow-x: hidden;
  overflow-y: scroll; }

#chatBottom {
  height: 120px;
  background-color: darkgray;
  bottom: 0;
  z-index: -1;
  display: flex;
  justify-content: space-evenly;
  flex-flow: row wrap; }

.chatOption {
  background-color: black;
  margin-bottom: 10px;
  width: 90%;
  height: 40px;
  color: white;
  text-align: center; }
  .chatOption p {
    font-size: 12pt;
    line-height: 40px;
    padding: 0;
    margin: 0; }

#opt1 {
  margin-top: 10px; }

.techMessage {
  color: black;
  height: auto;
  width: auto;
  max-width: 70%;
  padding-top: 0px;
  padding-bottom: 0px;
  padding-left: 10px;
  padding-right: 10px;
  margin: 20px;
  margin-bottom: 10px;
  margin-top: 10px;
  float: right;
  background-color: gray;
  margin-left: 60px; }
  .techMessage p {
    font-size: 13pt; }

.stationMessage {
  color: black;
  height: auto;
  width: auto;
  max-width: 70%;
  padding-top: 0px;
  padding-bottom: 0px;
  padding-left: 10px;
  padding-right: 10px;
  margin: 20px;
  margin-bottom: 10px;
  margin-top: 10px;
  float: left;
  text-align: left;
  background-color: cyan; }
  .stationMessage p {
    font-size: 13pt; }

.assistantChat {
  color: black;
  height: auto;
  width: auto;
  max-width: 70%;
  padding-top: 0px;
  padding-bottom: 0px;
  padding-left: 10px;
  padding-right: 10px;
  margin: 20px;
  margin-bottom: 10px;
  margin-top: 10px;
  float: left;
  text-align: left;
  background-color: red; }
  .assistantChat p {
    font-size: 13pt; }

button {
  font-size: 15pt;
  background-color: gray;
  border: none;
  color: black;
  font-size: 20pt; }
  button:hover {
    background-color: lightgray; }

.buttonOff {
  background-color: gray;
  border: none;
  color: black;
  font-size: 20pt; }

.buttonOn {
  background-color: lightgreen;
  border: none;
  color: black;
  font-size: 20pt; }

#filesWindowBody p {
  transition: color 0.3s; }
  #filesWindowBody p:hover {
    color: magenta; }
  #filesWindowBody p:active {
    color: lightblue; }

#overlay {
  background: black;
  display: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 99998; }

/* Creates an animation with 20 steaps. For each step, it calculates
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(97px, 9999px, 89px, 0);
    transform: skew(0.52deg); }
  5% {
    clip: rect(40px, 9999px, 79px, 0);
    transform: skew(0.73deg); }
  10% {
    clip: rect(32px, 9999px, 6px, 0);
    transform: skew(0.61deg); }
  15% {
    clip: rect(62px, 9999px, 43px, 0);
    transform: skew(0.07deg); }
  20% {
    clip: rect(54px, 9999px, 15px, 0);
    transform: skew(0.92deg); }
  25% {
    clip: rect(55px, 9999px, 32px, 0);
    transform: skew(0.06deg); }
  30% {
    clip: rect(23px, 9999px, 93px, 0);
    transform: skew(0.07deg); }
  35% {
    clip: rect(65px, 9999px, 59px, 0);
    transform: skew(0.27deg); }
  40% {
    clip: rect(26px, 9999px, 68px, 0);
    transform: skew(0.59deg); }
  45% {
    clip: rect(68px, 9999px, 21px, 0);
    transform: skew(0.23deg); }
  50% {
    clip: rect(91px, 9999px, 36px, 0);
    transform: skew(0.16deg); }
  55% {
    clip: rect(66px, 9999px, 90px, 0);
    transform: skew(0.09deg); }
  60% {
    clip: rect(83px, 9999px, 72px, 0);
    transform: skew(0.83deg); }
  65% {
    clip: rect(22px, 9999px, 86px, 0);
    transform: skew(0.84deg); }
  70% {
    clip: rect(9px, 9999px, 24px, 0);
    transform: skew(0.72deg); }
  75% {
    clip: rect(38px, 9999px, 39px, 0);
    transform: skew(0.98deg); }
  80% {
    clip: rect(22px, 9999px, 37px, 0);
    transform: skew(0.41deg); }
  85% {
    clip: rect(37px, 9999px, 93px, 0);
    transform: skew(0.13deg); }
  90% {
    clip: rect(77px, 9999px, 76px, 0);
    transform: skew(0.59deg); }
  95% {
    clip: rect(33px, 9999px, 58px, 0);
    transform: skew(0.54deg); }
  100% {
    clip: rect(90px, 9999px, 74px, 0);
    transform: skew(0.52deg); } }

@keyframes glitch-anim2 {
  0% {
    clip: rect(83px, 9999px, 50px, 0);
    transform: skew(0.65deg); }
  5% {
    clip: rect(35px, 9999px, 47px, 0);
    transform: skew(0.15deg); }
  10% {
    clip: rect(78px, 9999px, 75px, 0);
    transform: skew(0.01deg); }
  15% {
    clip: rect(74px, 9999px, 30px, 0);
    transform: skew(0.84deg); }
  20% {
    clip: rect(49px, 9999px, 15px, 0);
    transform: skew(0.65deg); }
  25% {
    clip: rect(41px, 9999px, 83px, 0);
    transform: skew(0.26deg); }
  30% {
    clip: rect(92px, 9999px, 50px, 0);
    transform: skew(0.42deg); }
  35% {
    clip: rect(61px, 9999px, 94px, 0);
    transform: skew(0.71deg); }
  40% {
    clip: rect(79px, 9999px, 92px, 0);
    transform: skew(0.65deg); }
  45% {
    clip: rect(14px, 9999px, 84px, 0);
    transform: skew(0.57deg); }
  50% {
    clip: rect(51px, 9999px, 35px, 0);
    transform: skew(0.99deg); }
  55% {
    clip: rect(13px, 9999px, 96px, 0);
    transform: skew(0.33deg); }
  60% {
    clip: rect(41px, 9999px, 12px, 0);
    transform: skew(0.92deg); }
  65% {
    clip: rect(28px, 9999px, 16px, 0);
    transform: skew(0.86deg); }
  70% {
    clip: rect(44px, 9999px, 80px, 0);
    transform: skew(0.72deg); }
  75% {
    clip: rect(8px, 9999px, 64px, 0);
    transform: skew(0.58deg); }
  80% {
    clip: rect(100px, 9999px, 71px, 0);
    transform: skew(0.6deg); }
  85% {
    clip: rect(9px, 9999px, 83px, 0);
    transform: skew(0.68deg); }
  90% {
    clip: rect(12px, 9999px, 76px, 0);
    transform: skew(0.2deg); }
  95% {
    clip: rect(22px, 9999px, 84px, 0);
    transform: skew(0.01deg); }
  100% {
    clip: rect(4px, 9999px, 11px, 0);
    transform: skew(0.75deg); } }

@keyframes glitch-skew {
  0% {
    transform: skew(4deg); }
  10% {
    transform: skew(4deg); }
  20% {
    transform: skew(1deg); }
  30% {
    transform: skew(3deg); }
  40% {
    transform: skew(1deg); }
  50% {
    transform: skew(2deg); }
  60% {
    transform: skew(0deg); }
  70% {
    transform: skew(0deg); }
  80% {
    transform: skew(-4deg); }
  90% {
    transform: skew(1deg); }
  100% {
    transform: skew(-3deg); } }

.glitch {
  text-align: center;
  position: relative;
  color: black;
  font-size: 80pt;
  line-height: 200pt;
  /* Animation provies a slight random skew. Check bottom of doc
	for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse; }
  .glitch::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    /* Creates an initial clip for our glitch. This works in
		a typical top,right,bottom,left fashion and creates a mask
		to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
		with an alternating animation to keep things fresh. */
    animation: glitch-anim 5s infinite linear alternate-reverse; }
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim2 1s infinite linear alternate-reverse; }

@keyframes flicker {
  0% {
    opacity: 0.27861; }
  5% {
    opacity: 0.34769; }
  10% {
    opacity: 0.23604; }
  15% {
    opacity: 0.90626; }
  20% {
    opacity: 0.18128; }
  25% {
    opacity: 0.83891; }
  30% {
    opacity: 0.65583; }
  35% {
    opacity: 0.67807; }
  40% {
    opacity: 0.26559; }
  45% {
    opacity: 0.84693; }
  50% {
    opacity: 0.96019; }
  55% {
    opacity: 0.08594; }
  60% {
    opacity: 0.20313; }
  65% {
    opacity: 0.71988; }
  70% {
    opacity: 0.53455; }
  75% {
    opacity: 0.37288; }
  80% {
    opacity: 0.71428; }
  85% {
    opacity: 0.70419; }
  90% {
    opacity: 0.7003; }
  95% {
    opacity: 0.36108; }
  100% {
    opacity: 0.24387; } }

.crt::after {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(18, 16, 16, 0.1);
  opacity: 0;
  z-index: 2;
  pointer-events: none;
  animation: flicker 0.15s infinite;
  animation-play-state: running; }

.crt::before {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%), linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
  z-index: 2;
  background-size: 100% 2px, 3px 100%;
  pointer-events: none; }

.crt {
  animation: textShadow 1.6s infinite; }

.crtPause::before {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%), linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
  z-index: 2;
  background-size: 100% 2px, 3px 100%;
  pointer-events: none; }

.crtPause::after {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(18, 16, 16, 0.1);
  opacity: 0;
  z-index: 2;
  pointer-events: none;
  animation: flicker 0.15s infinite;
  animation-play-state: paused; }

.crtPause {
  animation: textShadow 1.6s infinite; }
